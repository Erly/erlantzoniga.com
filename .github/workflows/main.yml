name: "CI/CD: Build, Push, and Deploy to Kubernetes"

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    env:
      REGISTRY: registry.erlantz.net
      IMAGE_NAME: erlantz-cv
      NAMESPACE: erlantz

    steps:
      - name: 1) Checkout repository
        uses: actions/checkout@v4

      - name: 2) Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 3) Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 4) Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: 5) Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: 6) Configure kubeconfig from secret
        shell: bash
        env:
          KUBE_CONFIG_B64: ${{ secrets.KUBE_CONFIG_B64 }}
        run: |
          if [ -z "$KUBE_CONFIG_B64" ]; then echo "KUBE_CONFIG_B64 secret is missing" >&2; exit 1; fi
          mkdir -p "$HOME/.kube"
          echo "$KUBE_CONFIG_B64" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"
          kubectl version --client
          kubectl cluster-info

      - name: 7) Ensure namespace exists
        run: |
          kubectl apply -f manifests/00-namespace.yaml

      - name: 8) Create or update imagePullSecret in namespace
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=${{ env.REGISTRY }} \
            --docker-username="${REGISTRY_USERNAME}" \
            --docker-password="${REGISTRY_PASSWORD}" \
            --namespace=${{ env.NAMESPACE }} \
            --dry-run=client -o yaml | kubectl apply -f -
          # Patch default service account to use the pull secret (idempotent)
          kubectl patch serviceaccount default \
            -n ${{ env.NAMESPACE }} \
            -p '{"imagePullSecrets":[{"name":"regcred"}]}' || true

      - name: 9) Apply Kubernetes manifests
        run: |
          kubectl apply -n ${{ env.NAMESPACE }} -f manifests/

      - name: 10) Update Deployment to the new image tag and wait for rollout
        run: |
          kubectl set image deployment/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/${{ env.IMAGE_NAME }} -n ${{ env.NAMESPACE }} --timeout=120s
